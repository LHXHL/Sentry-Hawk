# Generated by Django 3.2.13 on 2024-11-05 08:37
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
class Migration(migrations.Migration):
    initial = True
    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]
    operations = [
        migrations.CreateModel(
            name='Asset_info',
            fields=[
                ('asset_id', models.AutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('asset', models.CharField(max_length=255, verbose_name='资产')),
                ('asset_type', models.CharField(choices=[('URL', 'URL'), ('Domain', 'Domain'), ('IP', 'IP'), ('小程序', '小程序'), ('APP', 'APP')], max_length=10, verbose_name='资产类型')),
                ('asset_add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='资产创建时间')),
                ('asset_editor_time', models.DateTimeField(auto_now=True, null=True, verbose_name='资产最新修改时间')),
                ('asset_note', models.CharField(blank=True, max_length=64, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name_plural': '资产详情',
            },
        ),
        migrations.CreateModel(
            name='Poc',
            fields=[
                ('poc_id', models.AutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('poc_name', models.CharField(max_length=255, unique=True, verbose_name='poc名称')),
                ('poc_content', models.TextField(verbose_name='poc内容')),
                ('poc_type', models.CharField(choices=[('python', 'python'), ('yaml', 'yaml')], default='python', max_length=10, verbose_name='poc类型')),
                ('poc_level', models.CharField(choices=[('高危', '高危'), ('中危', '中危'), ('低危', '低危')], default='python', max_length=10, verbose_name='漏洞危害级别')),
            ],
            options={
                'verbose_name': 'poc管理',
            },
        ),
        migrations.CreateModel(
            name='Projects',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='项目名称')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='项目创建时间')),
                ('editor_time', models.DateTimeField(auto_now=True, null=True, verbose_name='项目最新修改时间')),
            ],
            options={
                'verbose_name_plural': '项目管理',
            },
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=16, verbose_name='标签名字')),
            ],
            options={
                'verbose_name_plural': '项目标签',
            },
        ),
        migrations.CreateModel(
            name='Vuln_info',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('vuln_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='漏洞名称')),
                ('vuln_url', models.CharField(blank=True, max_length=2048, null=True, verbose_name='漏洞url')),
                ('vuln_from', models.CharField(blank=True, choices=[('xray扫描结果', 'xray扫描结果'), ('nuclei扫描结果', 'nuclei扫描结果'), ('afrog扫描结果', 'afrog扫描结果'), ('人工添加', '人工添加')], max_length=10, null=True, verbose_name='漏洞来源')),
                ('vuln_level', models.CharField(blank=True, choices=[('高危', '高危'), ('中危', '中危'), ('低危', '低危'), ('信息', '信息')], max_length=64, null=True, verbose_name='漏洞危害级别')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('editor_time', models.DateTimeField(auto_now=True, null=True, verbose_name='最新修改时间')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.projects', verbose_name='所属单位')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.asset_info', verbose_name='漏洞目标')),
            ],
            options={
                'verbose_name_plural': '漏洞信息',
            },
        ),
        migrations.CreateModel(
            name='Url_info',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('title', models.CharField(blank=True, max_length=1024, null=True, verbose_name='网站标题')),
                ('Tide_finger', models.CharField(blank=True, max_length=1024, null=True, verbose_name='指纹信息')),
                ('status', models.CharField(default='200', max_length=64, verbose_name='状态码')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('editor_time', models.DateTimeField(auto_now=True, null=True, verbose_name='最新修改时间')),
                ('target', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.asset_info', verbose_name='扫描目标')),
            ],
            options={
                'verbose_name_plural': 'url资产详情',
            },
        ),
        migrations.CreateModel(
            name='Sensitive_info',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('info', models.CharField(blank=True, max_length=1024, null=True, verbose_name='敏感信息')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('editor_time', models.DateTimeField(auto_now=True, null=True, verbose_name='最新修改时间')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.projects', verbose_name='所属单位')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.asset_info', verbose_name='扫描目标')),
            ],
            options={
                'verbose_name_plural': '敏感信息',
            },
        ),
        migrations.CreateModel(
            name='Sensitive_dir',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('info', models.CharField(blank=True, max_length=1024, null=True, verbose_name='敏感目录')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('editor_time', models.DateTimeField(auto_now=True, null=True, verbose_name='最新修改时间')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.projects', verbose_name='所属单位')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.asset_info', verbose_name='扫描目标')),
            ],
            options={
                'verbose_name_plural': '敏感目录',
            },
        ),
        migrations.CreateModel(
            name='Scan_info',
            fields=[
                ('scan_id', models.AutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('scan_name', models.CharField(max_length=255, unique=True, verbose_name='扫描模板名称')),
                ('scan_schedule', models.IntegerField(blank=True, default=0, null=True, verbose_name='扫描进度')),
                ('asset_scan_if', models.BooleanField(default=True, verbose_name='资产收集调用')),
                ('info_scan_if', models.BooleanField(default=True, verbose_name='信息收集调用')),
                ('vuln_scan_if', models.BooleanField(default=True, verbose_name='漏洞扫描调用')),
                ('xray_scan_if', models.BooleanField(default=True, verbose_name='xray调用')),
                ('nuclei_scan_if', models.BooleanField(default=True, verbose_name='nuclei调用')),
                ('afrog_scan_if', models.BooleanField(default=True, verbose_name='afrog调用')),
                ('awvs_scan_if', models.BooleanField(default=True, verbose_name='awvs调用')),
                ('crt_sh_scan_if', models.BooleanField(default=True, verbose_name='crt_sh调用')),
                ('Ksubdomain_scan_if', models.BooleanField(default=True, verbose_name='Ksubdomain调用')),
                ('port_scan_if', models.BooleanField(default=True, verbose_name='端口扫描调用')),
                ('EHole_scan_if', models.BooleanField(default=True, verbose_name='EHole调用')),
                ('TideFinger_scan_if', models.BooleanField(default=True, verbose_name='TideFinger调用')),
                ('quake_if', models.BooleanField(default=True, verbose_name='quake调用')),
                ('fofa_if', models.BooleanField(default=True, verbose_name='fofa调用')),
                ('hunter_if', models.BooleanField(default=True, verbose_name='hunter调用')),
                ('scan_add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='扫描创建时间')),
                ('scan_start_time', models.DateTimeField(blank=True, null=True, verbose_name='扫描开始时间')),
                ('scan_end_time', models.DateTimeField(blank=True, null=True, verbose_name='扫描结束时间')),
                ('project_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.projects', verbose_name='所属项目')),
            ],
            options={
                'verbose_name_plural': '扫描任务',
            },
        ),
        migrations.AddField(
            model_name='projects',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.tags', verbose_name='项目标签'),
        ),
        migrations.CreateModel(
            name='Planned_task',
            fields=[
                ('plan_id', models.AutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('plan_name', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='计划任务名称')),
                ('plan_time', models.CharField(blank=True, max_length=255, null=True, verbose_name='计划时间设置')),
                ('plan_scan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='app.scan_info', verbose_name='计划扫描任务')),
            ],
            options={
                'verbose_name_plural': '计划任务',
            },
        ),
        migrations.CreateModel(
            name='Ip_info',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('port', models.CharField(blank=True, max_length=100, null=True, verbose_name='端口')),
                ('status', models.CharField(blank=True, default='open', max_length=50, null=True, verbose_name='端口状态')),
                ('service', models.CharField(blank=True, max_length=1000, null=True, verbose_name='端口指纹')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('editor_time', models.DateTimeField(auto_now=True, null=True, verbose_name='最新修改时间')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.asset_info', verbose_name='扫描目标')),
            ],
            options={
                'verbose_name_plural': 'ip资产详情',
            },
        ),
        migrations.CreateModel(
            name='Domain_ip',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('domain', models.CharField(blank=True, max_length=255, null=True, verbose_name='域名')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('editor_time', models.DateTimeField(auto_now=True, null=True, verbose_name='最新修改时间')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.asset_info', verbose_name='ip')),
            ],
            options={
                'verbose_name_plural': 'domain_ip关系对应表',
            },
        ),
        migrations.CreateModel(
            name='Domain_info',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('subdomain', models.TextField(blank=True, max_length=255, null=True, verbose_name='子域名')),
                ('add_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('editor_time', models.DateTimeField(auto_now=True, null=True, verbose_name='最新修改时间')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.asset_info', verbose_name='扫描目标')),
            ],
            options={
                'verbose_name_plural': 'domain资产详情',
            },
        ),
        migrations.AddField(
            model_name='asset_info',
            name='asset_project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.projects', verbose_name='所属单位'),
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nid', models.AutoField(primary_key=True, serialize=False)),
                ('nick_name', models.CharField(blank=True, max_length=16, null=True, verbose_name='昵称')),
                ('token', models.CharField(blank=True, help_text='其他平台的唯一登录id', max_length=64, null=True, verbose_name='id')),
                ('ip', models.GenericIPAddressField(blank=True, default='120.228.2.238', null=True, verbose_name='ip地址')),
                ('addr', models.TextField(blank=True, null=True, verbose_name='用户地址信息')),
                ('phone_num', models.BigIntegerField(blank=True, null=True, unique=True, verbose_name='手机号')),
                ('mail', models.EmailField(blank=True, max_length=255, null=True, unique=True, verbose_name='邮箱')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': '用户',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]